#!/usr/bin/env python
# -*- encoding: utf-8 -*-
'''

This is a simple script to load your work on odoo from the shell itself.
Trying to look for the better tool to achieve this job we think that it is more
efficient do it fro the same place you are working on.

usage:

    $ cd folder/where/simpletrackeris
    $ ./simpletimetracker -issue <<issue_id>> \
        --message "Documenting Issue Tracking"
'''

import os
import csv
from datetime import datetime
from timeit import default_timer
from vauxootools.vauxootools import VauxooToolsServers
from vauxootools.vauxootools import VxConfigServers
from vauxootools.instance import Instance
from os.path import expanduser

# Odoo Stuff to implement the connection

def connect(configuration):
    '''
    Connecting to Odoo Server.

    :configuration: VauxooToolsServers Object with configuration.
    '''
    hostname = configuration.get_hostname()
    dbname = configuration.get_db()
    port = configuration.get_port()
    user = configuration.get_user()
    pwd = configuration.get_pwd()
    origin = Instance(dbname=dbname,
                      hostname=hostname,
                      port=int(port),
                      passwd=pwd,
                      username=user,
                      logger=configuration.logger)
    server = origin.server_login()
    configuration.logger.info(configuration)
    return server

def write_local():
    '''
    Writing locally the log events to be able to  have a little
    cache and ask for it then
    '''
    folder = expanduser('~')
    csvf = os.path.join(folder, '.simpletrackercache')
    with open(csvf, 'wb') as csvfile:
        spamwriter = csv.writer(csvfile)
        spamwriter.writerow(['Spam', 'Lovely Spam', 'Wonderful Spam'])
    return True

def run_app(server):
    '''
    The main run element.
    '''
    clock_start = default_timer()
    now = datetime.now()
    what = "Doing something"
    print "You started to do {what} at {now}".format(what=what, now=now)
    try:
        while True:
            clock_end = default_timer()
    except (KeyboardInterrupt, SystemExit):
        m = "Dedicated {timer} seconds ".format(timer=clock_end - clock_start)
        print m
    except:
        raise

if __name__ == '__main__':
    CONFIGURATION = VauxooToolsServers(
        app_name='simple_tracker',
        usage_message=__doc__,
        options=['dbname',
                 'hostname',
                 'password',
                 'port',
                 'username'],
        log=True,
        vx_instance=VxConfigServers)

    run_app(connect(CONFIGURATION))
