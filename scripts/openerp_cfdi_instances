#! /usr/bin/env python
import oerplib
import logging
from vauxootools.vauxootools import VauxooTools
from configglue import glue, schema, app, parser
from vauxootools.vauxootools import VxConfig
from optparse import OptionParser

class VxConfig_servers(VxConfig):
    '''
    This class is to instanciate the `configglue`_ options to manage the
    configuration file and optparsers toghether. You will be able to load the
    configuration option from the command line and some of this 3 paths.::

        /etc/xdg/vauxootools/vauxootools.cfg
        /home/<user>/.config/vauxootools/vauxootools.cfg
        ./local.cfg

    The objective of this class is give a generic way to create all the config
    options you need almost always to interact openerp with.

    So as this is a normal python class you can always inherit it from your own
    script/tool and extend what you need.

    See vauxootools --help to read the configuration options available, you can
    create this files as any normal text file with the ini syntax.

    You can see below some options.

    .. _configglue: http://pythonhosted.org/configglue/
    '''

    sh = schema.StringOption(short_name='-sh', default='localhost',
            help='Hostname of your secondary OpenERP server.')
    sd = schema.StringOption(short_name='-sd', default='development',
            help='Secondary data base name where your secondary OpenERP has the information you need.')
    su = schema.StringOption(short_name='-su', default='demo',
            help='Secondary user name to connect to the database')
    sp = schema.StringOption(short_name='-sp', default='demo',
            help='Password of the secondary username provided.')
    sp = schema.IntOption(short_name='-sp', default=8069,
            help='Secondary port where your secondary openerp is serving the web-service.')
    il = schema.ListOption(short_name='-il', default=[0], remove_duplicates=True,
            help='List of id or ids separate by comma without spaces of the leads that generated the task of '
            'create the instance to extract data of it')


class VauxooTools_servers(VauxooTools):
    '''
    Vauxoo tools is the base class to manage the common features necesary to
    work with this library.
    '''
    def __init__(self, app_name='Vauxoo Tools', usage_message='Generated by VauxooTools',
                 options=None, log=False, vx_instance=VxConfig_servers):
        super(VauxooTools_servers,self).__init__(app_name=app_name, usage_message=usage_message,
                 options=options, log=log, vx_instance=vx_instance)

    def get_shostname(self):
        '''Helper to get the normal parameters with less code, in this case
        openerp hostname.

        >>> configuration = VauxooTools(app_name='TestApi',
                                        options=['sh', 'sp'])
        >>> result = configuration.get_shostname()
        >>> print result
        localhost
        '''
        return self.params.get('sh')

    def get_sport(self):
        '''openerp hostname what we will connect to.

        >>> configuration = VauxooTools(app_name='TestApi',
                                        options=['sh', 'sp'])
        >>> result = configuration.get_sport()
        >>> print result
        8069
        '''
        return self.params.get('sp')

    def get_sdb(self):
        '''openerp data base what we will conect to.

        >>> configuration = VauxooTools(app_name='TestApi', options=['hostname', 'sd'])
        >>> result = configuration.get_sdb()
        >>> print result
        development
        '''
        return self.params.get('sd')

    def get_suser(self):
        '''openerp data base what we will conect to.

        >>> configuration = VauxooTools(app_name='TestApi',
                                        options=['su', 'sp'])
        >>> result = configuration.get_suser()
        >>> print result
        demo
        '''
        return self.params.get('su')

    def get_spwd(self):
        '''openerp data base what we will conect to.

        >>> configuration = VauxooTools(app_name='TestApi',
                                        options=['su', 'sp'])
        >>> result = configuration.get_spwd()
        >>> print result
        demo
        '''
        return self.params.get('sp')

    def get_leads(self):
        '''openerp data base what we will conect to.

        >>> configuration = VauxooTools(app_name='TestApi',
                                        options=['il'])
        >>> result = configuration.get_leads()
        >>> print result
        [0]
        '''
        return self.params.get('il')

if __name__ == '__main__':

    configuration = VauxooTools_servers(app_name='openerp_verify',
            usage_message="Generated by VauxooTools",
            options=['hostname', 'port', 'sd', 'il'], log=True, vx_instance=VxConfig_servers)
    _logger=logging.getLogger('openerp_test')
    host = configuration.get_hostname()
    port = configuration.get_leads()

